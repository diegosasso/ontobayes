% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/galaxscript_pairwise.R
\name{galaxscript_pairwise}
\alias{galaxscript_pairwise}
\title{Builds all input files and an script to run all pairwise analyses from ontobayes or ontobayes_profiles in Galax.}
\usage{
galaxscript_pairwise(
  ids = ids,
  profile = F,
  runs = 2,
  burnin = 251,
  OS = "windows",
  filename = "galaxscript"
)
}
\arguments{
\item{ids}{data.frame or list, if profile = FALSE, ids should be a data.frame providing matches between characters and anatomical entities. 
The first column should provide character ids in the same order as presented in the character matrix. 
The second column should provide the respective ontology ids referring to the anatomical entities. 
The third column should provide the respective ontology terms referring to the anatomical entities.
See examples provided in the data folder (data1.csv and data2.csv).
Otherwise, ids should be a list of profiles organized as indicated in the examples.}

\item{profile}{logical, if TRUE specify that the input in ids is a list of profiles to query, organized as indicated in the examples.}

\item{runs}{integer, the number of independent runs of mcmc used in the MrBayes commands block. Default is set to 2.}

\item{burnin}{integer, the absolute number of trees as the burn-in used in the mcmc. Default is set to 251.}

\item{OS}{character, sets the operational system to produce batch files for. Options are "windows" and "unix". Default is set to "windows".}

\item{filename}{character, name of the output file.}
}
\value{
All necessary input files, organized in subfolders inside the GALAX/INPUT/pairwise folder, 
  and an script to run all Galax analyses.
}
\description{
Builds all input files and an script to run all pairwise analyses from ontobayes or ontobayes_profiles in Galax.
}
\examples{
\dontrun{
# HAO example #
# Create ID object #
ID <- as.data.frame(cbind(paste0("C", 1:40),
c(rep("HAO:0000506",5), rep("HAO:0000513",5), rep("HAO:0000453",5), rep("HAO:0000234",5), 
rep("HAO:0001003",5), rep("HAO:0000874",5), rep("HAO:0000583",5), rep("HAO:0000630",5)),
c(rep("mandible",5), rep("maxilla",5), rep("labium",5), rep("cranium",5)
, rep("tentorium",5), rep("prothorax",5), rep("mesothorax",5), rep("metathorax",5))))

# List of profiles with terms to query #
tags <- list(
  c("HAO:0000506", "HAO:0000513", "HAO:0000453"),
  c("HAO:0000234", "HAO:0001003"),
  c("HAO:0000874", "HAO:0000583", "HAO:0000630"))

# Set profile names and terms #
names(tags) <- c("mouthparts_profile1", "head_profile2", "mesosoma_profile3")
names(tags[[1]]) <- c("mandible", "maxilla", "labium")
names(tags[[2]]) <- c("cranium", "tentorium")
names(tags[[3]]) <- c("prothorax", "mesothorax", "metathorax")

# Creates bat file to run all analyses on Galax (profiles) #
galaxscript_pairwise(ids = tags, profile = T, runs = 2, burnin = 251, OS = "windows", filename = "galaxpairs1")

# Creates bat file to run all analyses on Galax (all partitions) #
galaxscript_pairwise(ids = ID, profile = F, runs = 2, burnin = 251, OS = "windows", filename = "galaxpairsfull1")

# UBERON example #
# Create ID object #
ID <- as.data.frame(cbind(paste0("C", 1:40),
c(rep("UBERON_0002244",5), rep("UBERON_0002397",5), rep("UBERON_0004742",5), rep("UBERON_2000658",5), 
rep("UBERON_2000488",5), rep("UBERON_0000151",5), rep("UBERON_0000152",5), rep("UBERON_0003097",5)),
c(rep("premaxilla",5), rep("maxilla",5), rep("dentary",5), rep("epibranchial bone",5)
, rep("ceratobranchial bone",5), rep("pectoral fin",5), rep("pelvic fin",5), rep("dorsal fin",5))))

# List of profiles with terms to query #
tags <- list(
  c("UBERON_0002244", "UBERON_0002397", "UBERON_0004742"),
  c("UBERON_2000658", "UBERON_2000488"),
  c("UBERON_0000151", "UBERON_0000152", "UBERON_0003097"))

# Set profile names and terms #
names(tags) <- c("jaw_profile1", "pharynx_profile2", "fins_profile3")
names(tags[[1]]) <- c("premaxilla", "maxilla", "dentary")
names(tags[[2]]) <- c("epibranchial_bone", "ceratobranchial_bone")
names(tags[[3]]) <- c("pectoral_fin", "pelvic_fin", "dorsal_fin")

# Creates bat file to run all analyses on Galax (profiles) #
galaxscript_pairwise(ids = tags, profile = T, runs = 2, burnin = 251, OS = "windows", filename = "galaxpairs2")

# Creates bat file to run all analyses on Galax (all partitions) #
galaxscript_pairwise(ids = ID, profile = F, runs = 2, burnin = 251, OS = "windows", filename = "galaxpairsfull2")
}

}
